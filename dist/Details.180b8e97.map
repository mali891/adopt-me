{"version":3,"sources":["Carousel.js","Modal.js","Details.js"],"names":["Carousel","state","photos","active","handleIndexClick","e","setState","target","dataset","index","value","map","photo","media","filter","React","Component","modalRoot","document","getElementById","Modal","props","el","createElement","appendChild","removeChild","children","petfinder","key","secret","Details","loading","showModal","toggleModal","pet","get","output","id","then","data","breed","Array","isArray","breeds","join","name","animal","location","contact","city","description","catch"],"mappings":"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","file":"Details.180b8e97.map","sourceRoot":"../src","sourcesContent":["import React from 'react';\n\nclass Carousel extends React.Component {\n    state = {\n        photos: [],\n        active: 0\n    }\n\n    static getDerivedStateFromProps({ media }) {\n        let photos = []\n        \n        if(media && media.photos && media.photos.photo) {\n            photos = media.photos.photo.filter(photo => photo['@size'] === 'pn')\n        }\n        \n        return { photos };\n    }\n\n    //Set which image is active, convert to a number if it's a string\n    handleIndexClick = e => this.setState({ active: +e.target.dataset.index })\n\n    render() {\n        const { photos, active } = this.state;\n\n        return (\n            <div className=\"carousel\">\n                <img src={ photos[active].value } alt=\"primary animal\"/>\n                <div className=\"carousel-smaller\">\n                    {/* render list of photos available */}\n                    { photos.map((photo, index) => (\n                        /* eslint-disable-next-line */\n                        <img \n                            key={ photo.value } \n                            src={ photo.value } \n                            className={ index === active ? 'active' : '' } \n                            alt=\"animal thumbnail\"\n                            data-index={ index }\n                            onClick={ this.handleIndexClick }\n                        />\n                    )) }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Carousel;","import React from 'react';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.getElementById('modal');\n\nclass Modal extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.el = document.createElement('div');\n    }\n\n    componentDidMount() { modalRoot.appendChild(this.el) }\n\n    componentWillUnmount() { modalRoot.removeChild(this.el) }\n\n    render() { return createPortal(this.props.children, this.el) }\n}\n\nexport default Modal;","import React from 'react';\nimport pf from 'petfinder-client';\nimport { navigate } from '@reach/router';\nimport Carousel from './Carousel';\nimport Modal from './Modal';\n\n//Pass the API creds to API method\nconst petfinder = pf({\n    key: process.env.API_KEY,\n    secret: process.env.API_SECRET\n})\n\nclass Details extends React.Component {\n    state = {\n        loading: true,\n        showModal: false,\n    }\n\n    toggleModal = () => this.setState({ showModal: !this.state.showModal })\n\n    componentDidMount() {\n        //Get the details for the relevant pet from the API\n        petfinder.pet.get({\n            output: \"full\",\n            id: this.props.id,\n        }).then(data => {\n            const pet = data.petfinder.pet;\n            let breed;\n\n            if(Array.isArray(pet.breeds.breed)) {\n                breed = pet.breeds.breed.join(', ');\n            } else {\n                breed = pet.breeds.breed;\n            }\n\n            this.setState({\n                name: pet.name,\n                animal: pet.animal,\n                location: `${pet.contact.city}, ${pet.contact.state}`,\n                description: pet.description,\n                media: pet.media,\n                breed,\n                loading: false,\n            })\n            //If error, navigate to home route (could be improved with some signposting)\n        }).catch(() => navigate(\"/\"))\n    }\n\n    render() {\n        const { name, animal, location, description, media, breed, loading, showModal } = this.state;\n\n        if(loading) {\n            return <h1>Loading...</h1>\n        }\n\n        return (    \n            <div className=\"details\">\n                <Carousel media={ media } />\n                <div className=\"details-inner\">\n                    <h1>{ name }</h1>\n                    <h2>{ animal } - { breed } - { location }</h2>\n                    <button onClick={ this.toggleModal }>Adopt { name }</button>\n                    <p>{ description }</p>\n\n                    {/* Conditionally render modal window */}\n                    { showModal && \n                        <Modal>\n                            <h1>Would you like to adopt { name }?</h1>\n                            <div className=\"buttons\">\n                                <button onClick={ this.toggleModal }>Yes</button>\n                                <button onClick={ this.toggleModal }>Definitely</button>\n                            </div>\n                        </Modal>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Details;"]}